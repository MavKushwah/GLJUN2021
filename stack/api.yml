AWSTemplateFormatVersion: "2010-09-09"
Description: Stack to create Api gateway
Parameters:
  Namespace:
    Type: String
    Description: Namespace for resources
  LoginLambdaArn:
    Type: String
  LogoffLambdaArn:
    Type: String
  RegisterLambdaArn:
    Type: String
  LocationLambdaArn:
    Type: String
  CreateRideLambdaArn:
    Type: String
  FindTaxiLambdaArn:
    Type: String
  AcceptRideLambdaArn:
    Type: String
  RideUpdateLambdaArn:
    Type: String
  CleanupLambdaArn:
    Type: String
  ApiGatewayStageName:
    Type: String
  GetAllTaxisLambdaArn:
    Type: String

Resources:

  RestApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: !Sub "${Namespace}-Api"

  RegisterProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'register'

  ApiGatewayRegisterMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RegisterLambdaArn}/invocations
      ResourceId: !Ref RegisterProxyResource
      RestApiId: !Ref RestApiGateway

  LoginProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'login'

  ApiGatewayLoginMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LoginLambdaArn}/invocations
      ResourceId: !Ref LoginProxyResource
      RestApiId: !Ref RestApiGateway

  LogoffProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'logoff'

  ApiGatewayLogoffMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LogoffLambdaArn}/invocations
      ResourceId: !Ref LogoffProxyResource
      RestApiId: !Ref RestApiGateway

  LocationProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'location'

  ApiGatewayLocationMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LocationLambdaArn}/invocations
      ResourceId: !Ref LocationProxyResource
      RestApiId: !Ref RestApiGateway

  CreateRideProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'createride'

  ApiGatewayCreateRideMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateRideLambdaArn}/invocations
      ResourceId: !Ref CreateRideProxyResource
      RestApiId: !Ref RestApiGateway

  FindTaxiProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'findtaxi'

  ApiGatewayFindTaxiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FindTaxiLambdaArn}/invocations
      ResourceId: !Ref FindTaxiProxyResource
      RestApiId: !Ref RestApiGateway

  AcceptRideProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'accept'

  ApiGatewayAcceptRideMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AcceptRideLambdaArn}/invocations
      ResourceId: !Ref AcceptRideProxyResource
      RestApiId: !Ref RestApiGateway

  RideUpdateProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'ride'

  ApiGatewayRideUpdateMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RideUpdateLambdaArn}/invocations
      ResourceId: !Ref RideUpdateProxyResource
      RestApiId: !Ref RestApiGateway

  GetAllTaxiProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'findalltaxi'

  ApiGatewayGetAllTaxiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetAllTaxisLambdaArn}/invocations
      ResourceId: !Ref GetAllTaxiProxyResource
      RestApiId: !Ref RestApiGateway

  CleanupProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: 'cleanup'

  ApiGatewayCleanupMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: 'POST'
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CleanupLambdaArn}/invocations
      ResourceId: !Ref CleanupProxyResource
      RestApiId: !Ref RestApiGateway

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayRegisterMethod
      - ApiGatewayAcceptRideMethod
      - ApiGatewayCleanupMethod
      - ApiGatewayCreateRideMethod
      - ApiGatewayFindTaxiMethod
      - ApiGatewayLocationMethod
      - ApiGatewayLoginMethod
      - ApiGatewayLogoffMethod
      - ApiGatewayRideUpdateMethod
      - ApiGatewayGetAllTaxiMethod
    Properties:
      RestApiId: !Ref RestApiGateway
      StageName: !Ref ApiGatewayStageName

  RegisterLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref RegisterLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/register

  LoginLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LoginLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/login

  LogoffLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LogoffLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/logoff

  LocationLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LocationLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/location

  CreateRideLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CreateRideLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/createride

  FindTaxiLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref FindTaxiLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/findtaxi

  CleanupLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CleanupLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/cleanup

  AcceptRideLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AcceptRideLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/accept

  RideUpdateLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref RideUpdateLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/ride

  GetAllTaxiLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetAllTaxisLambdaArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/findalltaxi

Outputs:
  ApiGatewayEndpoint:
    Value: !Sub https://${RestApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ApiGatewayStageName}/

